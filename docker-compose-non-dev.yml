#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apache/superset:${TAG:-latest-dev}
x-superset-depends-on: &superset-depends-on
  - db
  - redis

x-final-depends-on: &final-depends-on
  - superset
  - superset-worker

x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home
  - nginx-certificates:/etc/letsencrypt

version: "3.7"
services:
# install NGINX for METRO
# https://stackoverflow.com/questions/67376623/how-to-enable-https-in-superset-when-running-locally
  nginx:
    container_name: nginx4Metro
    #restart: unless-stopped
    env_file: docker/.env-non-dev
    build: 
      context: ./docker/nginx
      args:
          DOMAIN: geocube.ai
          EMAIL: dalexrobles@gmail.com
          FLASK: superset
    ports:
      - 80:80
      - 443:443
    depends_on: *final-depends-on

  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: docker/.env-non-dev
    image: kartoza/postgis:10.0-2.4
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql
    ports:
      - 5432:5432
    # env_file: docker/.env-non-dev
    # image: postgres:10
    # container_name: superset_db
    # restart: unless-stopped
    # volumes:
    #   - db_home:/var/lib/postgresql/data

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 5000:5000
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  
  # Gets and installs letsencrypt certificates
  # letsencrypt:
  #   image: geonode/spcgeonode:letsencrypt-3.1
  #   build: ./docker/letsencrypt/
  #   container_name: letsencrypt4Metro
  #   environment:
  #     - HTTPS_HOST=443
  #     - HTTP_HOST=8088
  #     - ADMIN_EMAIL=admin@localhost
  #     - LETSENCRYPT_MODE=staging
  #   volumes:
  #     - nginx-certificates:/geonode-certificates
  #   restart: on-failure

volumes:
  superset_home:
    external: false
  nginx-certificates:
    external: false
  db_home:
    external: false
  redis:
    external: false
  nginx-confd:
    external: false
